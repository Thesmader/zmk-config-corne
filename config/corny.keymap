#include <zmk-helpers/helper.h>
#include <zmk-helpers/key-labels/corne44.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define KEYS_L LT5 LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2 // thumb keys

/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp TAB      &kp Q   &kp W   &kp E            &kp R               &kp T                                                     &kp Y                  &kp U                &kp I       &kp O     &kp P      &kp BSPC 
 &kp ESCAPE   &kp A   &kp S   &kp D            &hml LEFT_SHIFT F   &hml LEFT_COMMAND G                                       &hmr RIGHT_COMMAND H   &hmr RIGHT_SHIFT J   &kp K       &kp L     &kp SEMI   &kp SQT    
 &kp LCTRL    &kp Z   &kp X   &kp C            &kp V               &kp B                    &kp C_MUTE   &kp LEFT_COMMAND    &kp N                  &kp M                &kp COMMA   &kp DOT   &kp FSLH   &kp ESC   
                              &kp LALT         &mo 1               &kp SPACE                                                 &kp ENTER              &mo 2                &kp LEFT_SHIFT                                       
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp LS(TAB) TAB>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
            // | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3              &kp N4        &kp N5                                  &kp N6    &kp N7     &kp N8    &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &bt BT_SEL 3  &bt BT_SEL 4                            &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &trans   &kp F12
&kp LSHFT   &kp F1        &kp F2        &kp F3              &kp F4        &kp F5        &bootloader  &bootloader  &kp F6    &kp F7     &kp F8    &kp F9     &kp F10  &kp F11
                                        &kp LALT            &trans        &trans                                  &kp RET   &kp SPACE  &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |                    |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |        |  |  boot  |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT     &kp HASH           &kp DLLR                 &kp PRCNT                &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans     &kp LG(LEFT)       &kp LG(RIGHT_ARROW)      &trans                   &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &kp LG(W)  &kp LA(LG(LEFT))   &kp LA(LG(RIGHT_ARROW))  &trans     &none  &none  &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LALT           &trans                   &trans                   &kp RET    &kp SPACE  &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
